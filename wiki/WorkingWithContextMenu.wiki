#summary Adapting of context menu to available and useful tasks increase enormously user experience

= Introduction =
Working with context menu means the way how javascript plugin developers can override default context menu of Notepad++ and improve so the user experience enormously. 

= Details =
Following steps are necessary:
 # Create own instance of context menu.
 # Add code filling new context menu.
 # Add code deciding if own or default context menu should be shown.
 # Add code disabling some menu items dependend on current context.
 # Add own context menu handler.

{{{
(function(){
	var ctxMenu = Editor.createContextMenu({oninitpopup:function(){
		// disable item if nothing selected
		selectionItem.disabled = currentView.selection == "";
	}});

	var selectionItem = ctxMenu.addItem({text:"Show selection", cmd:function(m){
		alert("Selection: " + currentView.selection);
	}})

	var showAlertItem = ctxMenu.addItem({text:"Show alert", cmd:function(m){
		alert("Always available menu item clicked");
	}})
		
	OnContextMenu = function(){
		// Show new context menu only for JavaScript files
		if (Editor.langs[currentView.lang] != "JS")
			return false;

		ctxMenu.show();
		
		return true;
	}


	GlobalListener.addListener({
		CONTEXTMENU: OnContextMenu
	})

})()
}}}

Use snippet above to realize context menus in your own plugins. Take a look into [http://jn-npp-plugin.googlecode.com/svn/wiki/API/api.xml API] for more.

<wiki:video width="820" height="500" url="http://youtu.be/OmJVkP_qWw8"/>