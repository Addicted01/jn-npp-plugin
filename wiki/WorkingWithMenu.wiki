#summary Describes creating of submenus and menu items
#labels Featured

= Introduction =
jN allows as to create submenus of main menu of notepad++ at run time.
For better user experience we can enable and disable them depending on some states, if functionality not available at the moment.

= Creating a submenu =
{{{
var cfg = { text: "My Menu" };
var myMenu = Editor.addMenu(cfg);
}}}

= Creating a menu entry = 
{{{
var myCmd = myMenu.addItem({
  // your own properties
  count: 0,
  // necessary properties
  text: "My command",
  cmd: function(m){
    this.count++; // access to your own properties
    alert(this.count);

    // Use myCmd variable or m to access
    // to menu entry object
    if (this.count == 3)
       m.disabled = true;
  }
});
}}}

In example above we add new menu entry "My command" with action code showing count of clicks we have done. We disable this menu entry if count of clicks exceeds 3.

http://jn-npp-plugin.googlecode.com/svn/wiki/MenuItem.png

= Creating separator = 
{{{
myMenu.addSeparator();
myMenu.addItem({text:"After separator"});
}}}

http://jn-npp-plugin.googlecode.com/svn/wiki/MenuSeparator.png

= Combine menu entry with shortcut =
To improve user experience we can add shortcuts to our menu entries. It is possible to implement different action code for menu item and shortcut, but we combine them together. We do that by using the same configuration object ~actionCfg~ by adding menu item and shortcut. The action code ~cmd~ will be called during both shortcut and menu item click handling. 

{{{
var actionCfg = {
  text: "Shortcut item\tCtrl+U", // relevant only for menu item
  cmd: function(m){ // m is valid only during menu item click
    alert(this.text + " handler");
  },
  
  // only shortcut relevant
  shift: true,
  ctrl: true,
  key:"u"
}
myMenu.addItem(actionCfg);
addHotKey(actionCfg);
}}}



= Best way to disable whole submenu or single menu entry = 